project_name: minepkg
builds:
  - id: minepkg
    binary: minepkg
    env:
    - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
  - id: minepkg-windows
    binary: minepkg
    goos:
      - windows
    goarch:
      - amd64
      - arm64
    hooks:
      post: >
        osslsigncode sign -key ./.tmp/key.pem -certs ./.tmp/cert.cert -n "minepkg" -i "https://minepkg.io/" -t "http://timestamp.digicert.com" -in {{ .Path }} -out {{ .Path }}.signed &&
        mv {{ .Path }}.signed {{ .Path }}
archives:
- id: minepkg
  name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
  format: binary
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
release:
  gitlab:
    owner: minepkg
    name: minepkg
  extra_files:
    - glob: ./dist/artifacts.json
    - glob: ./dist/metadata.json
# blobs:
#   provider: goos
#   bucket: minepkg-client
#   folder: stable
nfpms:
  -
    # ID of the nfpm config, must be unique.
    id: default

    # Name of the package.
    package_name: minepkg

    homepage: https://minepkg.io/
    maintainer: Filip Weiss <me@fiws.net>
    description: A package manager designed to install Minecraft mods and modpacks.
    license: MIT
    formats:
      - deb
      - rpm
dockers:
- image_templates:
  - "minepkg/minepkg:{{ .Version }}-slim-amd64"
  use: buildx
  dockerfile: Dockerfile
  build_flag_templates:
  - "--platform=linux/amd64"
- image_templates:
  - "minepkg/minepkg:{{ .Version }}-slim-arm64v8"
  use: buildx
  goarch: arm64
  dockerfile: Dockerfile
  build_flag_templates:
  - "--platform=linux/arm64/v8"
docker_manifests:
- name_template: minepkg/minepkg:{{ .Version }}-slim
  image_templates:
  - minepkg/minepkg:{{ .Version }}-slim-amd64
  - minepkg/minepkg:{{ .Version }}-slim-arm64v8
